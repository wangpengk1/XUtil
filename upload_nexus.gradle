/*
 * Copyright (C) 2018 xuexiangjys(xuexiangjys@163.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'maven'

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}
def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}
def getRepositoryUrl() {
    return !VERSION_NAME.toUpperCase().contains("SNAPSHOT") ? RELEASE_REPOSITORY_URL : SNAPSHOT_REPOSITORY_URL
}

afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                pom.groupId = GROUP
                pom.artifactId = ARTIFACT_ID
                pom.version = VERSION_NAME
                repository(url: getRepositoryUrl()) {
                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                }
            }
        }
    }

    if (project.hasProperty("android")) { // Android libraries
        task sourcesJar(type: Jar) {
            classifier = 'sources'
            from android.sourceSets.main.java.srcDirs
        }

        task javadoc(type: Javadoc) {
            failOnError false
            source = android.sourceSets.main.java.srcDirs
            classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        }
    } else { // Java libraries
        task sourcesJar(type: Jar, dependsOn: classes) {
            classifier = 'sources'
            from sourceSets.main.allSource
        }
    }

    // 制作文档(Javadoc)
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }

    //解决 JavaDoc 中文注释生成失败的问题
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }

    // javadoc configuration
    javadoc {
        options {
            encoding "UTF-8"
            charSet 'UTF-8'
            author true
            version VERSION_NAME
            links "http://docs.oracle.com/javase/7/docs/api"
            title POM_ARTIFACT_ID
        }
    }
}

/*
 * *********************************************************
 *
 *   ./gradlew uploadArchives
 *
 * *********************************************************
 *
 *  1.在项目中新建gradle.properties文件，然后配置如下属性：
 *
 *  #上传构件的信息
 *  GROUP=                            //组织名
 *  ARTIFACT_ID=                      //项目名
 *  VERSION_NAME=                     //版本名
 *
 *  compile 'GROUP:ARTIFACT_ID:VERSION_NAME'
 *
 *  #上传的目标仓库地址
 *  SNAPSHOT_REPOSITORY_URL=
 *  RELEASE_REPOSITORY_URL=
 *
 *  #Nexus 的私服的用户名称和密码
 *  NEXUS_USERNAME=
 *  NEXUS_PASSWORD=
 *
 */